version: "3.8"
services:
  proxy:
    image: nginx
    container_name: nidus-proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - web
    ports:
      - 80:80
    command: [nginx, "-g", "daemon off;"]
  api:
    image: alexandrelamberty/nidus-api:latest
    container_name: nidus-api
    env_file:
      - .env
    ports:
      - 3333:${API_PORT}
    depends_on:
      - database
  web:
    image: alexandrelamberty/nidus-web:latest
    container_name: nidus-web
    env_file:
      - .env
    ports:
      - 3000:${WEB_APP_PORT}
    depends_on:
      - api
  database:
    image: mongo:4.4.8 # < 5 for AVX CPU support (Elitebook 254Op)
    container_name: nidus-database
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DATABASE_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${DATABASE_NAME}
      - MONGO_INITDB_USER=${DATABASE_USERNAME}
      - MONGO_INITDB_PWD=${DATABASE_PASSWORD}
      - MONGODB_SYSTEM_LOG_VERBOSITY=3
    command: --auth
    ports:
      - 27017:${DATABASE_PORT}
    volumes:
      - database_data:/data/db
      - database_config:/data/configdb
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    restart: always
  mongo-express:
    image: mongo-express
    container_name: nidus-mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DATABASE_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DATABASE_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@database:27017/${DATABASE_NAME}
    depends_on:
      - database
volumes:
  cache_data:
  session_data:
  database_data:
  database_config:
  media_data:
